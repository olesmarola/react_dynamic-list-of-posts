{"version":3,"sources":["api.js","User.js","Comment.js","CommentList.js","Post.js","PostList.js","App.js","const.js","index.js"],"names":["loadFromServer","url","response","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","User","_ref","user","react_default","createElement","className","name","email","address","city","Comment","comment","body","CommentList","comments","map","src_Comment","key","id","Post","post","title","src_User","src_CommentList","PostList","posts","src_Post","App","_useState","useState","_useState2","Object","slicedToArray","setPosts","_useState3","_useState4","isStarted","setIsStarted","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_useState9","_useState10","filteredPosts","setFilteredPosts","normalizePosts","postsList","usersList","commentsList","objectSpread2","filter","postId","find","userId","loadPosts","_ref2","postsData","Promise","all","t0","message","type","onClick","Fragment","lib","debounceTimeout","placeholder","onChange","e","searchQuery","target","value","trim","toLowerCase","includes","src_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.120d2831.chunk.js","sourcesContent":["export const loadFromServer = async(url) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <p className=\"post__author\">\n    <span>{user.name}</span>\n    <br />\n    <span>{user.email}</span>\n    <br />\n    <span>{user.address.city}</span>\n  </p>\n);\n\nUser.propTypes = { user: PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n  }),\n}).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <div className=\"comments__item\">\n    <p className=\"comments__text\">{comment.body}</p>\n    <div className=\"comments__author\">\n      <span>{comment.name}</span>\n      <br />\n      <span>{comment.email}</span>\n    </div>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"post__comments comments\">\n    <h2 className=\"comments__title\">Comments:</h2>\n    {comments.map(\n      comment => <Comment key={comment.id} comment={comment} />\n    )}\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => (\n  <article className=\"post__item\">\n    <h2 className=\"post__title\">{post.title}</h2>\n    <p className=\"post__text\">{post.body}</p>\n    <User user={post.user} />\n    <CommentList comments={post.comments} />\n  </article>\n);\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  <section className=\"post__list\">\n    {posts.map(post => <Post key={post.id} post={post} />)}\n  </section>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport { DebounceInput } from 'react-debounce-input';\nimport { POSTS_URL, USERS_URL, COMMENTS_URL } from './const';\nimport { loadFromServer } from './api';\nimport PostList from './PostList';\nimport './App.css';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [isStarted, setIsStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n  const normalizePosts = (postsList, usersList, commentsList) => postsList.map(\n    post => ({\n      ...post,\n      comments: commentsList.filter(comment => comment.postId === post.id),\n      user: usersList.find(user => user.id === post.userId),\n    })\n  );\n\n  const loadPosts = async() => {\n    try {\n      setIsLoading(true);\n      setError('');\n\n      const [postsList, usersList, commentsList] = await Promise.all([\n        loadFromServer(POSTS_URL),\n        loadFromServer(USERS_URL),\n        loadFromServer(COMMENTS_URL),\n      ]);\n\n      const postsData = normalizePosts(postsList, usersList, commentsList);\n\n      setPosts(postsData);\n      setFilteredPosts(postsData);\n      setIsLoading(false);\n      setIsStarted(true);\n    } catch (e) {\n      setError(e.message);\n      setIsLoading(false);\n    }\n  };\n\n  const filterPosts = (e) => {\n    const searchQuery = e.target.value.trim().toLowerCase();\n\n    setFilteredPosts(posts.filter(\n      post => (post.title + post.body).toLowerCase().includes(searchQuery)\n    ));\n  };\n\n  if (error) {\n    return (\n      <div className=\"post__start\">\n        <span className=\"error\">{error}</span>\n        <button\n          className=\"post__button\"\n          type=\"button\"\n          onClick={loadPosts}\n        >\n          {isLoading ? 'Loading...' : 'Try again'}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isStarted ? (\n        <div className=\"post\">\n          <h1 className=\"title\">Dynamic list of posts</h1>\n          <DebounceInput\n            debounceTimeout={500}\n            placeholder=\"Type to search...\"\n            onChange={filterPosts}\n          />\n          <PostList posts={filteredPosts} />\n        </div>\n      ) : (\n        <div className=\"post__start\">\n          <button\n            className=\"post__button\"\n            type=\"button\"\n            onClick={loadPosts}\n          >\n            {isLoading ? 'Loading...' : 'Load Posts'}\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","export const POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nexport const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nexport const COMMENTS_URL = 'https://jsonplaceholder.typicode.com/comments';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}